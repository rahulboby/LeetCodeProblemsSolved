/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if (head == null || head.next == null) return head;

        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode before_first = dummy;

        for (int i = 1; i < left; i++) {
            before_first = before_first.next;
        }

        ListNode first_node = before_first.next;
        ListNode prev = null, ptr = first_node;

        for (int i = left; i <= right; i++) {
            ListNode next = ptr.next;
            ptr.next = prev;
            prev = ptr;
            ptr = next;
        }

        before_first.next = prev;
        first_node.next = ptr;

        return dummy.next;
    }
}
