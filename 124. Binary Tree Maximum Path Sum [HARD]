/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 import java.lang.Math;
class Solution {
    int globalMax = Integer.MIN_VALUE;


    public int maxSum(TreeNode root){

        if(root == null){
            return 0;
        }

        int leftSum = Math.max(maxSum(root.left), 0);
        int rightSum = Math.max(maxSum(root.right), 0);

        int fullSum = root.val + leftSum + rightSum;

        globalMax = Math.max(globalMax, fullSum);

        return root.val + Math.max(leftSum, rightSum);
    }

    public int maxPathSum(TreeNode root) {
        maxSum(root);
        return globalMax;
    }
}
