#include <stdlib.h>

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2) {
    struct ListNode* head = NULL;
    struct ListNode** new = &head; // Pointer to pointer for easier management

    while (list1 != NULL && list2 != NULL) {
        if (list1->val < list2->val) {
            *new = (struct ListNode*)malloc(sizeof(struct ListNode));
            (*new)->val = list1->val;
            list1 = list1->next;
        } else {
            *new = (struct ListNode*)malloc(sizeof(struct ListNode));
            (*new)->val = list2->val;
            list2 = list2->next;
        }
        new = &((*new)->next);
    }

    // Append the remaining list (if any)
    while (list1 != NULL) {
        *new = (struct ListNode*)malloc(sizeof(struct ListNode));
        (*new)->val = list1->val;
        list1 = list1->next;
        new = &((*new)->next);
    }

    while (list2 != NULL) {
        *new = (struct ListNode*)malloc(sizeof(struct ListNode));
        (*new)->val = list2->val;
        list2 = list2->next;
        new = &((*new)->next);
    }

    *new = NULL; 

    return head;
}
